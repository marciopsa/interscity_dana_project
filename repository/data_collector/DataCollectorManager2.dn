
data CityResourceData {
	byte resourceData[]
}

component provides DataCollectorManager requires net.http.HTTPRequest request, io.Output out,
 	data.StringUtil strUtil, data.IntUtil intUtil, data.json.JSONEncoder encoder, data.adt.HashTable,
	encoding.Encoder:uri codifier, data.mysql.MySQL {

	void DataCollectorManager:storeData(byte content[], char id[], DocStream s) {
		MySQL mysql = new MySQL("localhost", 0, "root", "root", "data_collector")
		/* storing data */
		//out.println("Storing data with id: $(id)...")
		mysql.execute(new char[]("INSERT INTO data (value, uuid) VALUES (\"", codifier.encode(content)
			,"\", \"", id ,"\");"))
		//recovering data from DB.
		char egQuery[] = new char[]("SELECT * FROM data ORDER BY id_data DESC;")
		mysql.execute(egQuery)
		Row rows[] = mysql.fetchAll()
		//out.println("Stored content DB: $(codifier.decode(rows[0].fields[1].value))")
	}

	void DataCollectorManager:receiveDataFromResource(char resource_id[], DocStream stream) {
		//out.println("uuid found on receiveDataFromResource() method : $(resource_id)")
		CityResourceData jsonBus_DataToBeSent = getLastDataSentFromResource(resource_id)
		if (jsonBus_DataToBeSent == null) {
			stream.write("resource data not found")
		} else {
			stream.write(jsonBus_DataToBeSent.resourceData)
		}
	}

	CityResourceData getLastDataSentFromResource(char resource_id[]) {
		MySQL mysql = new MySQL("localhost", 0, "root", "root", "data_collector")
		//out.println("Getting data with id: $(resource_id)...")
		char query[] = new char[]("SELECT * FROM data WHERE uuid = \"", resource_id, "\" ORDER BY id_data DESC;")
		mysql.execute(query)
		Row rows[] = mysql.fetchAll()
		//recovering data from DB.
		CityResourceData lastDataFromResource = new CityResourceData()
		lastDataFromResource.resourceData = codifier.decode(rows[0].fields[1].value)
		byte storeContent[] = lastDataFromResource.resourceData
		//out.println("lastDataFromResource content DB: $(storeContent)")
		return lastDataFromResource
	}

}
