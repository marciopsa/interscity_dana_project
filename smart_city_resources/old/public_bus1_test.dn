


component provides App requires net.http.HTTPRequest request, io.Output out, data.IntUtil iu, data.DecUtil du, data.json.JSONParser parser {





	int App:main(AppParam params[]) {

		/* char jsonBus[] = new char[]("{",
  						"\"data\": {",
    						"\"uuid\": \"45b7d363-86fd-4f81-8681-663140b318d4\",",
    						"\"description\": \"A public bus\",",
    						"\"capabilities\": [",
      							"\"temperature\",",
      							"\"humidity\",",
      							"\"illuminate\"",
    						"],",
    						"\"status\": \"active\",",
    						"\"lat\": -23.559616,",
    						"\"lon\": -46.731386,",
    						"\"country\": \"Brazil\",",
    						"\"state\": \"São Paulo\",",
    						"\"city\": \"São Paulo\",",
    						"\"neighborhood\": \"Butantã1234\",",
    						"\"postal_code\": \"null\",",
    						"\"created_at\": \"2018-05-05T00:26:53.019Z\",",
    						"\"updated_at\": \"2018-05-05T00:26:53.019Z\",",
    						"\"id\": 10,",
    						"\"test\": true,",
    						"\"t\": \"t\",",
    						"\"aInt\": [",
      							"0,",
      							"1,",
      							"2",
    						"],",
    						"\"aDec\": [",
      							"0.0,",
      							"0.1,",
      							"0.2",
    						"],",
    						"\"aBool\": [",
      							"true,",
      							"true,",
      							"false",
    						"]",
  						"}",
					"}") */


					char jsonBus[] = new char[]("{",
										"\"data\": {",
											"\"description\": \"A public bus!!!\",",
											"\"capabilities\": [\"temperature\", \"humidity\", \"illuminate\"],",
											"\"status\": \"active\",",
											"\"lat\": -23.559615,",
											"\"lon\": -46.731385",
											"}",
										"}")

		out.println("First request:")
		char url[] = "http://localhost:2018/adaptor/resources"
		HTTPResponse response = request.post(url, null, jsonBus)
		out.println("response.content: $(response.content)")

		/* out.println("Second request:")
		response = request.get("localhost:2018/resource/test2/list", null)
		out.println("$(response.content)") */


		return 0









	}

}
