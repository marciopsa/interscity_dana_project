uses ws.forms.FileFormField

component provides ws.Web requires io.Output out, ws.FormParser fparser, data.json.JSONParser jsonParser  {

	bool Web:get(char path[], DocStream s)
		{
		s.write("<html>")

		s.write("<title>My page777!</title>")
		s.write("<link href=\"swc/css/main.css\" rel=\"stylesheet\" type=\"text/css\">")

		s.write("<body>")

		s.write("get adaptor/resources")



		s.write("</body></html>")

		return true
		}

	bool Web:post(char path[], char contentType[], byte content[], DocStream stream)
		{

			//curl -d '{"data": {"description": "A public bus","capabilities": ["temperature","humidity","illuminate"],"status": "active","lat": -23.559616,"lon": -46.731386}' -H 'Content-Type: application/json' http://localhost:2018/adaptor/resources
			char doc[] =  "{\"data\": {\"description\": \"A public bus\",\"capabilities\": [\"temperature\",\"humidity\",\"illuminate\"],\"status\": \"active\",\"lat\": -23.559616,\"lon\": -46.731386}}"

			//char doc[] = "{\"age\":100,\"name\":\"mkyong.com\",\"messages\":[\"msg 1\",\"msg 2\",\"msg 3\"]}"
			//char doc[] = "{}"


			JSONElement jsonelement = jsonParser.parseDocument(doc)

			JSONElement jsonelement1 = jsonParser.getValue(jsonelement, "data")

			char doc_toString[] = jsonParser.documentToString(jsonelement1)

		//JSONElement jsonelement2 = jsonParser.getValue(jsonelement, "description")

			//JSONElement[] children = jsonelement.children
			//char description[] = children[0].value//"marcio"//jsonelement.name
//int type = jsonelement.name

		out.println("accessing HTTP POST method")

		out.println("contentType: $(contentType)")
		out.println("content: $(content)")

		out.println("doc_toString: $(doc_toString)")
		//out.println("JSONElement1: $(jsonelement.children[0].)")
		//out.println("JSONElement: $(type)")
		/*FormData form = fparser.getFormData(contentType, content)

		for (int i = 0; i < form.fields.arrayLength; i++)
			{
			out.println("field: $(form.fields[i].key):$(form.fields[i].value)")
			if (form.fields[i] hastype FileFormField)
				{
				FileFormField fff = form.fields[i]
				out.println(" -- filename: $(fff.filename), encoding: $(fff.encoding)")
				}
			}

		get(path, stream)*/

		return true
		}

	}
