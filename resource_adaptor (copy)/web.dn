// Dispatcher...
component provides ws.Web requires io.Output out, data.StringUtil strUtil, adaptor.RegisterResources registerResources {

	bool match(char path[], char expr[]) {
		String dirs[] = strUtil.explode(path, "/")
		String exprDirs[] = strUtil.explode(expr, "/")
		if (dirs.arrayLength < exprDirs.arrayLength) { return false }
		for (int i = 0; i < exprDirs.arrayLength; i++) {
			if ((dirs[i].string != exprDirs[i].string) && (exprDirs[i].string != "*")) {
				return false
			}
		}
		return true
	}

	void failed(DocStream s) {
		s.write("{\"response\" : \"failed\"}")
	}

	bool Web:get(char path[], DocStream stream, HashTable params) {
		// para cada url, voce pode mapear para uma funcao de um componente qualquer
		// caso nao a url nao seja uma url esperada, retorne mensagem de falha
		/* if (match(path, "/resource/test2/list")) {
			test2.list(stream)
		} else { failed(stream) } */
		return true
	}

	bool Web:post(char path[], char contentType[], byte content[], DocStream stream, HashTable params) {
		// para cada url, voce pode mapear para uma funcao de um componente qualquer
		// caso nao a url nao seja uma url esperada, retorne mensagem de falha
		if (match(path ,"/adaptor/resources")) {

			if ((params == null)) { failed(stream) }
			registerResources.register(content, "02390293023", "sensor", stream)
			//test.register(content, "02390293023", "sensor", stream)

		} else {
			if (match(path ,"/adaptor/resources/*/data")) {

			 /* if ((params == null) || (params.get("id") == null) || (params.get("device") == null)) { failed(stream) }
			 String id = params.get("id")


			 String device = params.get("device")
			 test.register(content, id.string, device.string, stream) */
			 //test.register(content, "02390293023", "sensor", stream)


			} else
	  { failed(stream) }
}
		return true
	}

	String[] Web:urls() {
		String exprs[] = new String[]()
		exprs = new String[](exprs, new String("/adaptor/resources"))
		exprs = new String[](exprs, new String("/adaptor/resources/{id}/data"))
		return exprs
	}
}
