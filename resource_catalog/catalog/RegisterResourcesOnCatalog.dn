


//======================================
data Capabilities {
	char value[]
}

data ResourceMetaData {
	char description[]
	Capabilities capabilities[]
	char status[]
	dec lat
	dec lon
}

data Response {
	char response[]
	char uuid[]
	char device[]
	char description[]
	Capabilities capabilities[]
  char status[]
  dec lat
  dec lon
  char country[]
  char state[]
  char city[]
  char neighborhood[]
  char postal_code[]
  char created_at[]
  char updated_at[]
  int id
}

/* data ResourceMetaData {
 char description[]
 Capabilities capabilities[]
 char status[]
 dec lat
 dec lon
 char country[]
 char state[]
 char city[]
 char neighborhood[]
 char postal_code[]
 char created_at[]
 char updated_at[]
 int id
} */

data InterSCityData {
	ResourceMetaData data_
}

// JSON data to be sent to Resource Adaptor
// response format
/*{
	"data": {
		"uuid": "45b7d363-86fd-4f81-8681-663140b318d4",
		"description": "A public bus",
		"capabilities": [
			"temperature",
			"humidity",
			"illuminate"
		],
		"status": "active",
		"lat": -23.559616,
		"lon": -46.731386,
		"country": "Brazil",
		"state": "São Paulo",
		"city": "São Paulo",
		"neighborhood": "Butantã",
		"postal_code": null,
		"created_at": "2018-05-07T01:25:49.939Z",
		"updated_at": "2018-05-07T01:25:49.939Z",
		"id": 10
	}
}*/




component provides RegisterResourcesOnCatalog requires io.Output out, data.StringUtil strUtil, data.IntUtil intUtil,
										data.json.JSONEncoder encoder, data.adt.HashTable {

	HashTable resourceMetaData_hashtable = new HashTable()

	//char uuid[]   //Not used yet!!!
	int global_id = 1

	void RegisterResourcesOnCatalog:register(byte content[], char id[], char device[], DocStream s) {
		out.println("entrando no register do RegisterResourcesOnCatalog")



		//curl -d '{"data": {"description": "A public bus","capabilities": ["temperature","humidity","illuminate"],"status": "active","lat": -23.559616,"lon": -46.731386}}' -H 'Content-Type: application/json' http://localhost:2018/adaptor/resources
		Map map[] = new Map[](new Map("data", "data_"))
		InterSCityData bus = encoder.jsonToData(content, typeof(InterSCityData), map)

		int created_id = storeResourceMetaData(bus)
		char created_id_str[] = intUtil.intToString(created_id)
		out.println("created_id: $(created_id_str)")

		Response r = new Response()
		r.response = "success"
		r.uuid = created_id_str//"111111"
		r.device = "sensor....123"
		r.description = bus.data_.description

		r.capabilities = new Capabilities[bus.data_.capabilities.arrayLength]
		for (int i = 0; i < bus.data_.capabilities.arrayLength; i++) {
			r.capabilities[i] = bus.data_.capabilities[i]
			out.println("capabilities: $(bus.data_.capabilities[i].value)")
		}

		r.status = bus.data_.status
		r.lat = bus.data_.lat
		r.lon = bus.data_.lon
		r.country = "Brazil"
		r.state = "São Paulo"
		r.city = "São Paulo"
		r.neighborhood = "Butantã"
		r.postal_code = null
		r.created_at = "2018-05-07T01:25:49.939Z"
		r.updated_at = "2018-05-07T01:25:49.939Z"
		r.id = created_id

		s.write(encoder.jsonFromData(r, null))

		// response format
		/*{
			"data": {
				"uuid": "45b7d363-86fd-4f81-8681-663140b318d4",
				"description": "A public bus",
				"capabilities": [
					"temperature",
					"humidity",
					"illuminate"
				],
				"status": "active",
				"lat": -23.559616,
				"lon": -46.731386,
				"country": "Brazil",
				"state": "São Paulo",
				"city": "São Paulo",
				"neighborhood": "Butantã",
				"postal_code": null,
				"created_at": "2018-05-07T01:25:49.939Z",
				"updated_at": "2018-05-07T01:25:49.939Z",
				"id": 10
			}
		}*/







	}

	int storeResourceMetaData(InterSCityData resourceMetatData) {
		int key = global_id
		global_id++



		resourceMetaData_hashtable.put(key, resourceMetatData)
		InterSCityData stored_dJ = resourceMetaData_hashtable.get(key)
		char stored_status[] = stored_dJ.data_.status

		char key_str[] = intUtil.intToString(key)
		//out.println("created_id: $(key_str)")
		out.println("key111: $(key_str)")
		out.println("Status armazenado no HashTable: $(stored_status)")

		return key
	}

}
